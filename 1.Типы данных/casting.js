// Для каждого описанного ниже выражения описать, чему будет равен результат выражения
// Описать почему так в комментарии к выражению

("1" + 1) === "11"; // Знак + складывает строки 1 преобразована к "1"
("1" - 1) === 0; // Строка "1" преобразуется к числу

(1 + true) === 2; // Boolean true is 1
(true + false) === 1; // Boolean true is 1, false is 0

({} + {}) === "[object Object][object Object]" ; // JS Приводит объект к строке "[object Object]" и складывает строки

({} === {}) === false; // По сути мы сравниваем два разных объекта поэтому false
(Object === Object) === true; // Object - Конструктор объекта, они равны

((() => {}) + 100) === "() => {}100"; // Вызывается метод toString() для функции, 100 приводится к строке

("b" + "a" + + "a" + "a") === "baNaNa"; // + + "a"  преобразуется в +(+"a"), +"a" не является числом значит это NaN

(([] + []) === []) === false; // Два массива не равны, т.к. являются двумя разными объектами
(![1]) === false; // Объекты приводятся к true

(!"") === true; // Пустая строка приводится к false
(!"     ") === false; // Строка приводится к true

(undefined === 0) === false; // Сравнение с undefined вернет false, разные типы

(null === null) === true;
(null == null) === true;
(null >= null) === true;

(Math.max() > Math.min()) === false; // .min сравнивает с +бесконечность, .max с -бесконечность. -Infinity < Infinity, поэтому false